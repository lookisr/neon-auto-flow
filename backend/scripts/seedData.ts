import mongoose from 'mongoose';
import { Advertisement } from '../src/models/Advertisement.js';
import { User } from '../src/models/User.js';
import dotenv from 'dotenv';
import bcrypt from 'bcryptjs';

dotenv.config();

const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/kps-auto';

async function seedData() {
  try {
    console.log('üîß [DEBUG] Connecting to MongoDB...');
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ Connected to MongoDB');

    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    await User.deleteMany({});
    await Advertisement.deleteMany({});
    console.log('‚úÖ Cleared existing data');

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–∞—Ä–æ–ª—å –±—É–¥–µ—Ç —Ö–µ—à–∏—Ä–æ–≤–∞–Ω –≤ –º–æ–¥–µ–ª–∏)
    const testUser = new User({
      email: 'test@example.com',
      password: 'test123'
    });
    await testUser.save();
    console.log('‚úÖ Test user created:', testUser.email);

    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞
    const adminUser = new User({
      email: 'company@kps-auto.ru',
      password: 'admin123',
      role: 'admin'
    });
    await adminUser.save();
    console.log('‚úÖ Admin user created:', adminUser.email);

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
    const testAdvertisements = [
      {
        userId: testUser._id,
        brand: 'Toyota',
        carModel: 'Camry',
        year: 2020,
        price: 2500000,
        description: '–û—Ç–ª–∏—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –ø–æ–ª–Ω—ã–π –ø–∞–∫–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
        contacts: '+7 (999) 123-45-67',
        photoUrl: 'https://images.unsplash.com/photo-1549317661-bd32c8ce0db2?w=400',
        engineVolume: 2.5,
        mileage: 50000,
        ownersCount: 1,
        isDamaged: false,
        transmission: '–ê–≤—Ç–æ–º–∞—Ç',
        fuelType: '–ë–µ–Ω–∑–∏–Ω',
        color: '–ë–µ–ª—ã–π'
      },
      {
        userId: testUser._id,
        brand: 'Hyundai',
        carModel: 'Sonata',
        year: 2019,
        price: 1800000,
        description: '–ù–∏–∑–∫–∏–π –ø—Ä–æ–±–µ–≥, –æ–¥–∏–Ω –≤–ª–∞–¥–µ–ª–µ—Ü',
        contacts: '+7 (999) 123-45-67',
        photoUrl: 'https://images.unsplash.com/photo-1552519507-da3b142c6e3d?w=400',
        engineVolume: 2.0,
        mileage: 35000,
        ownersCount: 1,
        isDamaged: false,
        transmission: '–ê–≤—Ç–æ–º–∞—Ç',
        fuelType: '–ë–µ–Ω–∑–∏–Ω',
        color: '–°–µ—Ä–µ–±—Ä–∏—Å—Ç—ã–π'
      },
      {
        userId: testUser._id,
        brand: 'Kia',
        carModel: 'K5',
        year: 2021,
        price: 2200000,
        description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω, —ç–∫–æ–Ω–æ–º–∏—á–Ω—ã–π –¥–≤–∏–≥–∞—Ç–µ–ª—å',
        contacts: '+7 (999) 123-45-67',
        photoUrl: 'https://images.unsplash.com/photo-1606664515524-ed2f786a0bd6?w=400',
        engineVolume: 1.6,
        mileage: 25000,
        ownersCount: 1,
        isDamaged: false,
        transmission: '–ê–≤—Ç–æ–º–∞—Ç',
        fuelType: '–ë–µ–Ω–∑–∏–Ω',
        color: '–ß–µ—Ä–Ω—ã–π'
      }
    ];

    for (const adData of testAdvertisements) {
      const advertisement = new Advertisement(adData);
      await advertisement.save();
      console.log('‚úÖ Advertisement created:', `${adData.brand} ${adData.carModel}`);
    }

    console.log('‚úÖ Seed data completed successfully');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Seed data error:', error);
    process.exit(1);
  }
}

seedData(); 